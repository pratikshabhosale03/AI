def greedy_job_scheduling(jobs):
    jobs.sort(key=lambda x : x[1])
    n=len(jobs)
    schedule=[]

    current_time=0

    for i,job in enumerate(jobs):
        start_time,finish_time=job
        if start_time >=current_time:
            schedule.append((i+1,start_time,finish_time))
            current_time=finish_time
    return schedule

def main():
    jobs=[]
    num_jobs=int(input("enter a number of jobs"))
    for i in range (num_jobs):
        start_time=int(input(f"enter start time for job {i+1}:"))
        finish_time=int(input(f"enter finish time for job {i+1}:"))
        jobs.append((start_time,finish_time))

    schedule=greedy_job_scheduling(jobs)
    print("optimizes schedule")
    for jobs in schedule:
        print("job",jobs[0],":",jobs[1],"-",jobs[2])

main()
